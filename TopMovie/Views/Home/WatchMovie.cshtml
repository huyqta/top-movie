@model Movie.Services.Models.TbMovie;
@inject Movie.Services.Models.webphimContext context;

@{
    List<Movie.Services.Models.TbMovie> relatedMovies = new List<Movie.Services.Models.TbMovie>();
}
<h2 class="text-bold">@Model.MovieName</h2>
@*<img id="movie-box" class="movie-img img-responsive" src="@Model.ImageUrl" alt="@Model.MovieName">
        @Model.GoogleDrive
    <input type="button" class="btn btn-info" value="Play" onclick="PlayMovie()"  />
    <input type="button" class="btn btn-info" value="Rate" />*@
@Html.Raw(@Model.GoogleDrive)
<div class="box box-solid">
    <div class="box-header with-border">
        <i class="fa fa-text-width"></i>
        <input type="hidden" id="movie-url" value="@Model.GoogleDrive" />
        <h3 class="box-title">Movie Information:</h3>
    </div>

    <!-- /.box-header -->
    <div class="box-body">
        <dl class="dl-horizontal">
            <dt>ID Code:</dt>
            <dd>@Model.ImdbId</dd>
            <dt>Release Date:</dt>
            <dd>@Model.ReleaseDate.Value.ToString("yyyy-MM-dd")</dd>
            <dt>Category:</dt>
            <dd>
                @foreach (var category in Model.CategoryTag.Split(","))
                {
                    <a href="@Url.Action("Category", "Home", new { category = category })" target="_self">@category</a>
                    if (context.TbMovie.Any(m => m.CategoryTag.IndexOf(category) > -1))
                    {
                        relatedMovies.Add(context.TbMovie.FirstOrDefault(m => m.CategoryTag.Contains(category)));
                    }
                }
            </dd>
            <dt>Tags:</dt>
            <dd>
                @foreach (var tag in Model.MovieTag.Split(","))
                {
                    <a href="@Url.Action("Tag", "Home", new { tag = tag }))" target="_self">@tag</a>
                    if (context.TbMovie.Any(m => m.MovieTag.IndexOf(tag) > -1))
                    {
                        relatedMovies.Add(context.TbMovie.FirstOrDefault(m => m.MovieTag.Contains(tag)));
                    }
                }
            </dd>
            <dt>Actress: </dt>
            <dd>
                @foreach (var actor in Model.ActorTag.Split(","))
    {
            <a href="@Url.Action("Actor", "Home", new { actor = actor })" target="_self">@actor</a>
if (context.TbMovie.Any(m => m.ActorTag.IndexOf(actor) > -1))
{
    relatedMovies.Add(context.TbMovie.FirstOrDefault(m => m.ActorTag.Contains(actor)));
}
}
            </dd>
        </dl>
    </div>
    <!-- /.box-body -->
    <h3>RELATED VIDEOS</h3>
    @{
        relatedMovies.Distinct().Take(12);
        <div class="row">
            @foreach (var movie in relatedMovies){
            <div class="col-md-2">
                <img id="movie-box" class="movie-img img-responsive" src="@movie.ImageUrl" alt="@movie.MovieName">
                <h5>@movie.MovieName</h5>
            </div>
            }
        </div>
    }
</div>